@startuml LoginRegistration
participant User as U
participant Microservice as M
participant AppId as A

autoactivate on
U -> M: unauthorizedRequest()
return redirect to login page
U -> A: login(username, password)
return token
U -> M: authorizedRequest(token)
M -> A: getUser(token)
return user info
return ok
@enduml

@startuml CreateViolation
    participant User as U
    participant Violations as V
    participant Statistics as S
    participant DataMining as DM
    participant ComputerVision as CV
    autoactivate on

    U -> V: createViolation(vData)
    V -> CV: sendImages(URLs)
    return metadata
    V -> DM: sendViolation(vData, metadata)
    V -> S: sendViolation(vData, metadata)
    return ok
    return ok
    return ok
@enduml

@startuml ViolationMicroservice
    participant User as U
    participant "CloudObject\nStorage" as COS
    participant Violation as V
    participant ViolationsDatabase as VD
    autoactivate on
    U -> COS: storePictures(pics)
    return URLs
    U -> V: createViolation(vData, urls)
    V -> VD: storeViolation(vData, urls)
    return ok
    return ok
@enduml

@startuml AutomaticTicket
    participant User as U
    participant Violation as V
    participant "Tickets Hashing\nSystem" as H
    participant TicketsCheck as TC
    participant DataMining as DM
    participant PoliceSystem as PS

    autoactivate on
    U -> V: sendAutomaticTicket(data)
    V -> H: sendTicket(data)
    return ok
    V -> TC: sendTicket(data)
    TC -> DM: checkTicket(data)
    return ok
    return ok
    V -> PS: sendTicket(data)
    PS -> H: checkHash(ticektHash)
    return ok
    return ok
    return ok
@enduml

@startuml TicketHashingSystem
    participant Violation as V
    participant TicketsHashingSystem as H
    participant ReadOnlyDatabase as DB
    participant PoliceSystem as PS
    autoactivate on

    V -> H: sendTicket(data)
    H -> DB: insert(hash)
    return ok
    return ok
    PS -> H: checkHash(hash)
    H -> DB: get(hash)
    return ok
    return ok
@enduml

@startuml OfficerTicketCheck
    participant User as U
    participant Officer as O
    participant Violation as V
    participant "Tickets Hashing\nSystem" as H
    participant TicketsCheck as TC
    participant DataMining as DM
    participant PoliceSystem as PS

    autoactivate on
    U -> V: sendAutomaticTicket(data)
    V -> H: sendTicket(data)
    return ok
    V -> TC: sendTicket(data)
    TC -> DM: checkTicket(data)
    return KO
    return KO
    V -> V: markAsToCheck(ticket)
    deactivate V
    return ok
    O -> V: getPendingTickets()
    return tickets
    O -> V: approve(ticket)
    V -> PS: sendTicket(ticket)
    PS -> TC: check(hash)
    return ok
    return ok
    return ok
@enduml

@startuml Suggestions
    participant Officer as O
    participant Suggestions as S
    participant "Suggestions\nDatabase" as DB
    participant DataMining as DM
    autoactivate on

    == Every day at midnight ==
    S -> DM: querySuggestions()
    return suggestions
    S -> DB: store(suggestions)
    return ok
    == ==
    O -> S: getSuggestions()
    S -> DB: getSuggestions()
    return newSuggestions
    return newSuggestions
    loop for all handled suggestions
        O -> S: delete(suggestion)
        S -> DB: delete(suggestion)
        return ok
        return ok
    end
@enduml